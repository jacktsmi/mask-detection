FILE DESCRIPTIONS:

run.sh: Bash file that essentially runs the entire project. Consists of
three shell commands. The first one reloads the udev rules to prevent
crashing of devices during runtime, namely the webcam and arduino. The
following two lines run concurrently the system.py and face_cap.py files.

system.py: Continuously runs entire system real-time. It obtains readings
from the distance sensor and, when a person is there, it takes a photo
with the thermal camera. It then detects whether or not they are wearing
a mask and controls the lock and LEDs depending on the classification.

face_cap.py: Continuously streams a live video feed from the webcam
with an oval that is placed such that it lines up with where the thermal
camera requires certain parts of the face to be. It also has some text
on the video feed with instructions for a user.

read_sensor.ino: Code that should be uploaded to the Arduino before attempting
to run the system. It obtains distance readings from the sensor, passes them
into a moving average filter, and depending on the moving average value
determines whether a person is there or not.

owrcycle.sh: Bash file that reboots power supplied to USB ports. Sometimes
our program crashes, and it requires power supply to USB ports to reboot in
order to be fixed. This should be run in that case rather than rebooting entire
Pi.

mask_reset.sh: Bash file that unbinds and rebinds the USB port with the webcam. This
should also be run in the event that the video stream freezes after killing the
programs.

serial_rules/99-ard.rules: Updated kernel rules for loading in the Arduino. This
ensures it is loaded in via device properties rather than by USB port index.

serial_ruels/99-cam.rules: Updated kernel rules for loading in the webcam. This
ensures it is loaded in via device properties rather than by USB port index.

HOW THEY ARE USED TOGETHER:

The read_sensor.ino file is the code uploaded to the Arduino before running
any of the other files. It grabs sensor readings, filters them, and sends
messages to the Pi via Serial. The system.py handles all of the processing of
these readings as well as doing all of the other system related processing, such
as taking a picture and performing detection as well as controlling output. The
face_cap.py file is simply a video stream that runs concurrently with system.py.
The run.sh is what runs everything that needs to be run to use the system.
To do this one goes into the terminal and simply types './run.sh' in this
directory. The owrcycle.sh and mask_reset.sh files are simply to ease the handling of crashes
when they happen.

See USAGE.txt to see how the rules files should be used.

THEORY OF OPERATION:

The system during its 'idle' time is simply displaying a live video feed
from the webcam and continuously filtering and processing the sensor
readings until someone comes close enough. When the moving average falls below
1 meter, a person is detected as being close enough for the rest of the system
to be triggered. In this event, a 3 second delay takes place before taking
a photo with the thermal camera in order to give the person enough time to
follow the instructions on the video feed and place their head in the correct
position. It then takes the picture and performs mask detection by taking the
difference between the temperature at the forehead region and the mouth region.
If this difference is large enough (>2 C), they are classified as wearing a
mask. In this event, the LED turns green and it unlocks. Otherwise, the red
LED comes on and the lock remains locked. The system then returns to its idle
stage after this output event happens.
